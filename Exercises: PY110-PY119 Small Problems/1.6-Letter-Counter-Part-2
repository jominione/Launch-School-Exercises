# Modify the word_sizes function from the previous exercise to exclude 
# non-letters when determining word size. For instance, the word size of
# "it's" is 3, not 4.

# Solution:

def word_sizes(string):
    dict = {}
    words = string.split()
    for word in words:
        if word.isalpha():
            if len(word) in dict.keys():
                dict[len(word)] += 1
            else:
                dict[len(word)] = 1
        else:
            count_alpha = 0
            for char in word:
                if char.isalpha():
                    count_alpha += 1
            if count_alpha in dict.keys():
                dict[count_alpha] += 1
            else:
                dict[count_alpha] = 1
    return dict

# Examples:

# All of these examples should print True

string = 'Four score and seven.'
print(word_sizes(string) == {4: 1, 5: 2, 3: 1})

string = 'Hey diddle diddle, the cat and the fiddle!'
print(word_sizes(string) == {3: 5, 6: 3})

string = 'Humpty Dumpty sat on a w@ll'
print(word_sizes(string) == {6: 2, 3: 2, 2: 1, 1: 1})

string = "What's up doc?"
print(word_sizes(string) == {5: 1, 2: 1, 3: 1})

print(word_sizes('') == {})

# Alternative solution from chatGPT:

def count_word_sizes(input_string):
    # Split the input string into words
    words = input_string.split()
    
    # Initialize an empty dictionary to store word sizes and their counts
    word_size_count = {}
    
    # Iterate through each word and count its size
    for word in words:
        # Count only alphabetic characters for word length
        word_length = sum(1 for char in word if char.isalpha())
        
        if word_length > 0:  # Exclude words that have no alphabetic characters
            if word_length in word_size_count:
                word_size_count[word_length] += 1
            else:
                word_size_count[word_length] = 1
    
    return word_size_count

# Test cases
print(count_word_sizes("Hello world"))  # Output: {5: 1}
print(count_word_sizes("The quick brown fox jumps over the lazy dog"))  
# Output: {3: 5, 5: 2, 4: 1, 6: 1, 2: 2, 1: 1, 9: 1}
print(count_word_sizes("apple banana orange"))  # Output: {5: 3}
print(count_word_sizes(""))  # Output: {}
print(count_word_sizes("a bb ccc dddd eeeee"))  # Output: {1: 1, 2: 1, 3: 1, 4: 1, 5: 1}
print(count_word_sizes("it's"))  # Output: {3: 1}