// What will the following code log to the console and why? Don't run the 
// code until after you have tried to answer.

logValue();

function logValue() {
  console.log('Hello, world!');
}

// Solution: Will output to console 'Hello, world!'. Function declarations
// are hoisted to top of the scope, in this global. So when logValue() is
// invoked it treats the function as being defined even though it occurs after
// the invocation.

// Hoisting is the process of finding and associating variable declarations
// with their respective scope -- prior to the execution of all other code.
// In addition to variable declarations, the JavaScript interpreter also hoists
// function declarations. However, in contrast to how only the name of a
// variable is hoisted, with function declarations everything is hoisted,
// including both the function name and body. This means that the program
// can execute a function even before declaring it.

// Here is the code after hoisting:

// function logValue() {
//   console.log('Hello, world!');
// }

// logValue();