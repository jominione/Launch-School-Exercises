// Write a function that takes two sorted arrays as arguments and returns 
// a new array that contains all the elements from both input arrays in sorted 
// order.

// You may not provide any solution that requires you to sort the result array. 
// You must build the result array one element at a time in the proper order.

// Your solution should not mutate the input arrays.

// Examples:

console.log(merge([1, 5, 9], [2, 6, 8]));      // [1, 2, 5, 6, 8, 9]
console.log(merge([1, 1, 3], [2, 2]));         // [1, 1, 2, 2, 3]
console.log(merge([], [1, 4, 5]));             // [1, 4, 5]
console.log(merge([1, 4, 5], []));             // [1, 4, 5]

// Solution:

function merge(array1, array2) {

  function bubbleSort(array) {
    
    do {
      var swap = false;
      for (let i=1; i < array.length; i++) {
        if (array[i-1] > array[i]) {
          array.splice(i+1, 0, array[i-1]);
          array.splice(i-1,1);
          swap = true;
        }
      }
    } while (swap == true)
    
    return array;
  }

  let mergeArray = array1.concat(array2);
  let result = bubbleSort(mergeArray);
  return result;
}