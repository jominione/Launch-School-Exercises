// Write a function that returns a list of all palindromic substrings of a 
// string. That is, each substring must consist of a sequence of characters 
// that reads the same forward and backward. The substrings in the returned 
// list should be sorted by their order of appearance in the input string. 
// Duplicate substrings should be included multiple times.

// You may (and should) use the substrings function you wrote in the previous 
// exercise.

// For the purpose of this exercise, you should consider all characters and 
// pay attention to case; that is, 'AbcbA' is a palindrome, but 'Abcba' and 
// 'Abc-bA' are not. In addition, assume that single characters are not 
// palindromes.

// Examples:

console.log(palindromes('abcd'));       // []
console.log(palindromes('madam'));      // [ "madam", "ada" ]

console.log(palindromes('hello-madam-did-madam-goodbye'));
// returns
// [ "ll", "-madam-", "-madam-did-madam-", "madam", "madam-did-madam", "ada",
//   "adam-did-mada", "dam-did-mad", "am-did-ma", "m-did-m", "-did-", "did",
//   "-madam-", "madam", "ada", "oo" ]

console.log(palindromes('knitting cassettes'));
// returns
// [ "nittin", "itti", "tt", "ss", "settes", "ette", "tt" ]

// Solution:

function palindromes(text) {
  if (text.length === 1) { return false}
  function isPalindrome(text) {
    return text === text.split('').reverse().join('');
  }

  function substrings(text) {

    function leadingSubstrings(text) {
      let result = [];
      for (let i = 0; i < text.length; i++) {
        result.push(text.substring(0, i+1));
      }
      return result;
    }

    let result = [];
    for (let i = 0; i < text.length; i++) {
      result.concat(leadingSubstrings(text.substring(i)));
    }
    return result;

  }

  let result = [];
  let substringsArray = substrings(text);
  console.log(substringsArray)
  for (let i = 0; i < substringsArray.length; i++) {
    let substring = substringsArray[i];
    console.log(substring)
    if (isPalindrome(substring)) { result.push(substring); }
  }
  return result;
}