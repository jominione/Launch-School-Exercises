// We have been asked to implement a function that determines whether or not 
// a given word is a reserved keyword. We wrote the isReserved function below 
// along with some test cases, but we aren't seeing the expected result. Why 
// not? Fix the code so that it behaves as intended.

const RESERVED_KEYWORDS = ['break', 'case', 'catch', 'class', 'const', 'continue',
  'debugger', 'default', 'delete', 'do', 'else', 'enum', 'export', 'extends', 'finally',
  'for', 'function', 'if', 'implements', 'import', 'in', 'instanceof', 'interface',
  'let', 'new', 'package', 'private', 'protected', 'public', 'return', 'static',
  'super', 'switch', 'this', 'throw', 'try', 'typeof', 'var', 'void', 'while',
  'with', 'yield'];

// function isReserved(name) {
//   RESERVED_KEYWORDS.forEach(reserved => {
//     if (name === reserved) {
//       return true;
//     }
//   });

//   return false;
// }

console.log(isReserved('monkey')); // false
console.log(isReserved('patch'));  // false
console.log(isReserved('switch')); // should be: true

// Solution:

// The return statement inside the forEach callback only returns from the 
// callback function, not from the isReserved function itself. As a result, 
// the function always returns false because the return true inside forEach 
// doesn't affect the outer isReserved function.

function isReserved(name) {
  for (let i = 0; i < RESERVED_KEYWORDS.length; i++) {
    if (name === RESERVED_KEYWORDS[i]) {
      return true;
    }
  }
  return false;
}

// Alternative Solution:

function isReserved(name) {
  return RESERVED_KEYWORDS.some(reserved => name === reserved);
}

// Discussion:

// Recall that Array.prototype.forEach executes the callback function once 
// for each element of the array, and in the end always returns undefined. 
// The return value of the callback is ignored, so our return statement does 
// not have any impact. If you want to return early and with a different value 
// than undefined, you need to iterate differently, for example using a for 
// loop.

// You can check out the documentation for forEach on MDN.

// In the second solution we are using the Array.prototype.some() method which 
// checks whether at least one element in the given array passes the test 
// implemented by the provided function. You can read more about this method 
// on MDN.

// Another Solution:

function isReserved(name) {
  return RESERVED_KEYWORDS.includes(name);
} 