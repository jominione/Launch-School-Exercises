// Write a function that takes a string as an argument and returns true if 
// all parentheses in the string are properly balanced, false otherwise. To 
// be properly balanced, parentheses must occur in matching '(' and ')' pairs.

// Examples:

console.log(isBalanced("What (is) this?") === true);
console.log(isBalanced("What is) this?") === false);
console.log(isBalanced("What (is this?") === false);
console.log(isBalanced("((What) (is this))?") === true);
console.log(isBalanced("((What)) (is this))?") === false);
console.log(isBalanced("Hey!") === true);
console.log(isBalanced(")Hey!(") === false);
console.log(isBalanced("What ((is))) up(") === false);

// Solution:

function isBalanced(text) {
  let balance = 0;
  if ((text[0] === ')') || (text[text.length-1] === '(')) { return false; }
  for (let i = 0; i < text.length; i++) {
    let char = text[i];
    if (char === '(') {
      balance += 1;
    } else if (char === ')') {
      balance -= 1;
    }
    if (balance < 0) { return false; }
  }
  return balance === 0;
}