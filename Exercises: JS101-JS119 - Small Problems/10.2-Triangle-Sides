// A triangle is classified as follows:

// * Equilateral: All three sides are of equal length.
// * Isosceles: Two sides are of equal length, while the third is different.
// * Scalene: All three sides are of different lengths.

// To be a valid triangle, the sum of the lengths of the two shortest sides 
// must be greater than the length of the longest side, and every side must 
// have a length greater than 0. If either of these conditions is not 
// satisfied, the triangle is invalid.

// Write a function that takes the lengths of the three sides of a triangle 
// as arguments and returns one of the following four strings representing 
// the triangle's classification: 'equilateral', 'isosceles', 'scalene', or 
// 'invalid'.

// Hint:

// Valid triangles must have the following two characteristics:

// 1. All sides must have lengths greater than zero â€” i.e., the shortest side 
//    is greater than zero (shortest > 0).
// 2. The sum of the two shortest sides must be greater than the longest side 
//    (shortest + middle > longest).

// Examples:

console.log(triangle(3, 3, 3));        // "equilateral"
console.log(triangle(3, 3, 1.5));      // "isosceles"
console.log(triangle(3, 4, 5));        // "scalene"
console.log(triangle(0, 3, 3));        // "invalid"
console.log(triangle(3, 1, 1));        // "invalid"

// Solution:

function triangle(num1, num2, num3) {
  let sort = [num1, num2, num3].sort();
  if ((Math.min(num1, num2, num3) === 0) || 
      (sort[0] + sort[1] < sort[2])) {
    return 'invalid';
  } else if ((num1 === num2) && (num2 === num3)) {
    return 'equilateral';
  } else if ((num1 !== num2) && (num1 !== num3) && (num2 !== num3)) {
    return 'scalene';
  } else {
    return 'isosceles';
  }
}