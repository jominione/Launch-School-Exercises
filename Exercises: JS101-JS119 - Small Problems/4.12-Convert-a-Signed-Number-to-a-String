// In the previous exercise, you developed a function that converts 
// non-negative numbers to strings. In this exercise, you're going to extend 
// that function by adding the ability to represent negative numbers as well.

// Write a function that takes an integer and converts it to a string 
// representation.

// You may not use any of the standard conversion functions available in 
// JavaScript, such as String() and Number.prototype.toString(). You may, 
// however, use integerToString() from the previous exercise.

// You might also want to check the Math.sign() function.

// Examples:

console.log(signedIntegerToString(4321) === "+4321");
console.log(signedIntegerToString(-123) === "-123");
console.log(signedIntegerToString(0) === "0");

// Solution:

function signedIntegerToString(num) {
  if (num === 0) return '0';

  let digits = [];
  let isNegative = false;

  // Handle negative numbers
  if (num < 0) {
    isNegative = true;
    num = -num;
  }

  // Extract digits
  while (num > 0) {
    let digit = num % 10;
    digits.push(String.fromCharCode(digit + 48)); // Convert digit to character
    num = Math.floor(num / 10);
  }

  // Append negative sign if necessary
  if (isNegative) {
    digits.push('-');
  } else {
    digits.push('+');
  }

  // Reverse the digits array to get the correct order
  let str = '';
  for (let i = digits.length - 1; i >= 0; i--) {
    str += digits[i];
  }

  return str;
}