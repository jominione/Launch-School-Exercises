// The parseInt() method converts a string of numeric characters (including 
// an optional plus or minus sign) to an integer. The method takes 2 arguments 
// where the first argument is the string we want to convert and the second 
// argument should always be 10 for our purposes. parseInt() and the Number() 
// method behave similarly. In this exercise, you will create a function that 
// does the same thing.

// Write a function that takes a string of digits and returns the appropriate 
// number as an integer. You may not use any of the methods mentioned above.

// For now, do not worry about leading + or - signs, nor should you worry 
// about invalid characters; assume all characters will be numeric.

// You may not use any of the standard conversion methods available in 
// JavaScript, such as String() and Number(). Your function should do this 
// the old-fashioned way and calculate the result by analyzing the characters 
// in the string.

// Examples:

console.log(stringToInteger("4321") === 4321); // logs true
console.log(stringToInteger("570") === 570); // logs true

// Solution:

function stringToInteger(string) {
  let number = 0;
  for (let i = 0; i < string.length; i++) {
    let char = string[i];
    let magnitude = 10 ** (string.length - 1 - i);
    switch (char) {
      case '1': number += 1 * magnitude; break;
      case '2': number += 2 * magnitude; break;
      case '3': number += 3 * magnitude; break;
      case '4': number += 4 * magnitude; break;
      case '5': number += 5 * magnitude; break;
      case '6': number += 6 * magnitude; break;
      case '7': number += 7 * magnitude; break;
      case '8': number += 8 * magnitude; break;
      case '9': number += 9 * magnitude; break;
      default: number += 0;
    }
  }
  return number;
}