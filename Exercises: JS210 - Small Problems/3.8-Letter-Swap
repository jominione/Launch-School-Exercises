// P - Problem: Given a string of words separated by spaces, write a function 
// that swaps the first and last letters of every word.

// You may assume that every word contains at least one letter, and that the 
// string will always contain at least one word. You may also assume that 
// each string contains nothing but words and spaces, and that there are no 
// leading, trailing, or repeated spaces.

//  Explicit Requirements:
//   - Given a string of words separated by spaces, write a function that 
//     swaps the first and last letters of every word.
//   - Every word contains at least one letter, and that the string will always 
//     contain at least one word.
//   - Each string contains nothing but words and spaces, and that there are 
//     no leading, trailing, or repeated spaces.

//  Implicit Requirements:
//   - 

// E - Examples/Test Cases:

console.log(swap('Oh what a wonderful day it is'));  // "hO thaw a londerfuw yad ti si"
console.log(swap('Abcde'));                          // "ebcdA"
console.log(swap('a'));                              // "a"

// D - Data Structures: 
// - Input: string
// - Output: string
// - Intermediate: array

// A - Algorithm:
// - Split sentence into array of words.
// - loop through array of words and swap first and last letter of each word.
// - Push new word into new array.
// - Join new array into single string and return string.

// C - Implementation/Implementing (a solution in Code):

function swap(sentence) {
  let words = sentence.split(' ');
  return words.length === 1 ? sentence : 
         words.map( word => word[word.length - 1] + word.slice(1, -1) + word[0] ).join(' ');
}