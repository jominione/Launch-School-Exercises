// P - Problem: Modify the wordSizes function from the previous exercise to 
// exclude non-letters when determining word size. For instance, the word 
// size of "it's" is 3, not 4.

//  Explicit Requirements:
//   - Remove non-letter characters from text.

//  Implicit Requirements:
//   - Treat numbers are non-letters.

// E - Examples/Test Cases:

console.log(wordSizes('Four score and seven.'));                       
// { "3": 1, "4": 1, "5": 2 }

console.log(wordSizes('Hey diddle diddle, the cat and the fiddle!'));  
// { "3": 5, "6": 3 }

console.log(wordSizes("What's up doc?"));                              
// { "5": 1, "2": 1, "3": 1 }

console.log(wordSizes(''));                                            
// {}

// D - Data Structures: 
// - Input: string
// - Output: simple object
// - Intermediate: array

// A - Algorithm:
// - Remove all non-letter characters from string.

// C - Implementation/Implementing (a solution in Code):

function removeNonLetters(sentence) {
  let letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ ';
  let result = '';
  for (let char of sentence) {
    if (letters.includes(char)) {
      result += char;
    }
  }
  return result;
}

function wordSizes(sentence) {

  let words = removeNonLetters(sentence).split(' ');
  let result = {};

  words.forEach(word => {
    let length = word.length;
    if (length === 0) return; // Can't use continue/break in .forEach.
                              // Use return to get same behaviour using return
                              // to skip current iteration.
    result[length] = (result[length] || 0) + 1;
  });

  return result;
}