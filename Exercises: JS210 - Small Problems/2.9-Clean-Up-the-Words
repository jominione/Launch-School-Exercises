// P - Problem: Given a string that consists of some words and an assortment 
// of non-alphabetic characters, write a function that returns that string 
// with all of the non-alphabetic characters replaced by spaces. If one or 
// more non-alphabetic characters occur in a row, you should only have one 
// space in the result (i.e., the result string should never have consecutive 
// spaces).

//  Explicit Requirements:
//   - Remove all non-alphabetic characters and replace by spaces.
//   - If there are consecutive non-alphabetic characters, replace with one
//     space only.

//  Implicit Requirements:
//   - 

// E - Examples/Test Cases:

console.log(cleanUp("---what's my +*& line?"));    // " what s my line "

// D - Data Structures: 
// - Input: string
// - Output: string
// - Intermediate:

// A - Algorithm:
// - Initialise a string of letters in both lowercase and uppercase.
// - Intialise results string that is empty.
// - Run a loop against each character in string.
//   - Check if character is alphabetic.
//     - add to results string.
//   - else if next character is also non-alphabetic then continue;
//   - else add space to results string.
// - return results.

// C - Implementation/Implementing (a solution in Code):

function cleanUp(str) {
  let alphabet = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
  let result = "";
  for (let i = 0; i < str.length; i++) {
    if (alphabet.includes(str[i])) {
      result += str[i];
    } else if (!alphabet.includes(str[i+1])) {
      continue;
    } else {
      result += " ";
    }
  }
  return result;
}