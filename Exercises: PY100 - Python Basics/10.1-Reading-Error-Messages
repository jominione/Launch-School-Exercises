# You come across the following code. What errors does it raise for the
# given examples and what exactly do the error messages mean?

def find_first_nonzero_among(numbers):
    for n in numbers:
        if n != 0:
            return n

# Solutions:

find_first_nonzero_among(0, 0, 1, 0, 2, 0)  # TypeError
find_first_nonzero_among(1)                 # TypeError

# Will raise TypeError because the function is expecting list of integers.
# The first function invocation raises an TypeError. The error message tells 
# you that the function find_first_nonzero_among was given 6 arguments but 
# expects only 1.

# The second function invocation receives the correct number of arguments,
# so no error is raised on line 1. However, as soon as the program tries
# to evaluate line 2 with the given argument, it raises another TypeError.

# This is because the function parameter numbers is now bound to the provided
# argument 1, so it tries to evaluate for n in numbers. Since integers arg
# not iterables, this raises a TypeError.