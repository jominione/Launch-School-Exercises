# What will the following code do and why? Don't run it until you have tried
# to answer.

# Example:

a = 1

def my_function():
    print(a)

my_function()

# Solution: Output 1. a is defined at global scope. When my_function is invoked
# it looks for a in its local scope but then looks at global scope when it
# find a local scope a.

# Official Solution. The variable a is initialised at the tope level of our
# code and is initialised with the value 1. This makes it globally accessible
# throughout the code, including within the body of the my_function. When
# we invoke my_function, it prints the value of the global variable a, which
# is 1.