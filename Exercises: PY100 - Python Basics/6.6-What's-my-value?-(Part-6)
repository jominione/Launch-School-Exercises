# What will the following code do and why? Don't run it until you have tried
# to answer.

# Example:

a = 1

def my_function():
    a = 2

my_function()
print(a)

# Solution: Output 1. The a defined at line 6 is different to a defined at
# line 9. When my_function is invoked it initialises a that local in scope
# and not accessible outside of this scope. When print is invoked it will
# look for a that is initialised at global scope.

# Official Solution: The variable a initialised at the top level has the value
# 1. Inside the function, a new local variable a is initialised and assigned
# the value 2. This local variable a has no effect on the global variable a.
# When we call print(a) after invoking my_function, it refers to the global
# variable a, which still has the value 1.