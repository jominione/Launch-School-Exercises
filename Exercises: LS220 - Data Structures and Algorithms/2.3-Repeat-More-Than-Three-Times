// Problem: Given an array nums, sorted in ascending order (where elements 
// are equal to or increase as you move through the array), determine if a 
// specified number, target, appears more than three times in the array. The 
// function should return true if target is found at least four times, and 
// false otherwise.


// Rules:
//      Explicit Requirements:
//        - You are given an array nums, sorted in ascending order (where 
//          elements are equal to or increase as you move through the array).
//        - Determine if a specified number, target, appears more than three 
//          times in the array. 
//        - The function should return true if target is found at least four 
//          times, and false otherwise.

//      Implicit Requirements:
//        - Target may not be in nums.
//        - Elements do not need to be unique.

// Questions:
// - Are elements unique?
// - Can nums be empty?
// - Can target not appear in nums?

// Input:
// - array
// - integer

// Output:
// - boolean


// Data Structures: 
// - No other data structure necessary.

// Algorithm:
// - Build two helper functions.
// - Determine if target in nums else false.
// - If target in nums, determine the lowest and highest index of target in
//   nums and return the difference between highest and lowest index.
// - Return true if difference between highest and lowest index is greater
//   than 3 or false otherwise.


// Test Cases:

console.log(isTargetFrequent([1, 2, 3, 3, 3, 3, 4], 3) === true);
console.log(isTargetFrequent([1, 1, 1, 1, 2, 3, 4], 1) === true);
console.log(isTargetFrequent([1, 2, 3, 4, 5], 2) === false );
console.log(isTargetFrequent([1, 1, 3, 4, 5], 2) === false );
console.log(isTargetFrequent([2, 2, 2, 3, 3, 3, 4], 3) === false);
console.log(isTargetFrequent([4, 4, 4, 4, 4, 4, 4], 4) === true);

// All test cases should log true.

// Implementation:

function isTargetFrequent(nums, target) {
  let firstIndex = leftTargetIndex(nums, target);
  let lastIndex = rightTargetIndex(nums, target);

  if (firstIndex < 0) {
    return false;
  }
  return lastIndex - firstIndex + 1 > 3;
}

function leftTargetIndex(nums, target) {
  let left = 0;
  let right = nums.length - 1;
  let index = -1;

  while (left <= right) {
    let mid = Math.floor((left + right) / 2);
    if (nums[mid] === target) {
      index = mid;
      right = mid - 1;
    } else if (nums[mid] < target) {
      left = mid + 1;
    } else {
      right = mid - 1;
    }
  }
  return index;
}

function rightTargetIndex(nums, target) {
  let left = 0;
  let right = nums.length - 1;
  let index = -1;

  while (left <= right) {
    let mid = Math.floor((left + right) / 2);
    if (nums[mid] === target) {
      index = mid;
      left = mid + 1;
    } else if (nums[mid] > target) {
      right = mid - 1;
    } else {
      left = mid + 1;
    }
  }
  return index;
}