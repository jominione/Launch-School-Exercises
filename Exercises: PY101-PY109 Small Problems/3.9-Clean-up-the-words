# Given a string that consists of some words and an assortment of 
# non-alphabetic characters, write a function that returns that string with
# all of the non-alphabetic characters replaced by spaces. If one or more
# non-alphabetic characters occur in a row, you should only have one space
# in the result (i.e., the result string should never have consecutive spaces).

# Solution:

def clean_up(text):

    def crunch(text):
        characters = list(text)
        characters.append('')
        crunch_list = []
        for index in range(len(characters)-1):
            if characters[index] != characters[index+1]:
                crunch_list.append(characters[index])
            else:
                pass
        crunch_text = ''.join(crunch_list)
        return crunch_text

    characters = list(text)
    for index in range(len(characters)):
        if not characters[index].isalpha():
            text = text.replace(characters[index], ' ')
    return crunch(text)

# Example:

print(clean_up("---what's my +*& line?") == " what s my line ")